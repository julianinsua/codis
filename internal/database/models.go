// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package database

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/google/uuid"
)

type Post struct {
	ID          uuid.UUID      `json:"id"`
	Title       string         `json:"title"`
	Description sql.NullString `json:"description"`
	Status      sql.NullString `json:"status"`
	UserID      uuid.UUID      `json:"userId"`
	Path        string         `json:"path"`
	CreatedAt   sql.NullTime   `json:"createdAt"`
	UpdatedAt   sql.NullTime   `json:"updatedAt"`
}

type PostTag struct {
	ID     uuid.UUID `json:"id"`
	PostID uuid.UUID `json:"postId"`
	TagID  uuid.UUID `json:"tagId"`
}

type PostsView struct {
	ID          uuid.UUID       `json:"id"`
	Title       string          `json:"title"`
	Description sql.NullString  `json:"description"`
	Status      sql.NullString  `json:"status"`
	UserID      uuid.UUID       `json:"userId"`
	PostTags    json.RawMessage `json:"postTags"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       uuid.UUID `json:"userId"`
	RefreshToken string    `json:"refreshToken"`
	ClientAgent  string    `json:"clientAgent"`
	ClientIp     string    `json:"clientIp"`
	IsBlocked    bool      `json:"isBlocked"`
	ExpiresAt    time.Time `json:"expiresAt"`
	CreatedAt    time.Time `json:"createdAt"`
}

type Tag struct {
	ID     uuid.UUID `json:"id"`
	Name   string    `json:"name"`
	UserID uuid.UUID `json:"userId"`
}

type User struct {
	ID        uuid.UUID    `json:"id"`
	Username  string       `json:"username"`
	Password  string       `json:"password"`
	Email     string       `json:"email"`
	CreatedAt sql.NullTime `json:"createdAt"`
	UpdatedAt sql.NullTime `json:"updatedAt"`
}
